name: Validate cargo projects

on:
  workflow_call:

env:
  CARGO_TERM_COLOR: always
  SOURCE_PATH: "./src"

jobs:
  validate:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install webkit/GTK dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get -y update
          sudo apt-get -y install libwebkit2gtk-4.0-dev \
            build-essential \
            curl \
            wget \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          path: ${{ env.SOURCE_PATH }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          override: true
      - uses: Swatinem/rust-cache@v1
        with:
          working-directory: ${{ env.SOURCE_PATH }}
          cache-on-failure: true
          key: Trunk_${{ inputs.TRUNK_VERSION }}-TauriCLI_${{ inputs.TAURI_CLI_VERSION }}

      - name: Fake websrc
        shell: pwsh
        working-directory: ${{ env.SOURCE_PATH }}
        run: New-Item -ItemType "directory" -Path "./src-tauri/websrc"
      - name: Cargo build
        run: cargo build --verbose --locked --release
        working-directory: ${{ env.SOURCE_PATH }}

      - name: Run tests
        run: cargo test --verbose --locked --release --no-fail-fast
        working-directory: ${{ env.SOURCE_PATH }}
      - name: Clippy
        run: cargo clippy --all-features --workspace --all-targets -- -D warnings
        working-directory: ${{ env.SOURCE_PATH }}
      - name: Format check
        run: cargo fmt --all --check
        working-directory: ${{ env.SOURCE_PATH }}